/*! recline.view.nvd3 v0.1 */
!function(a,b){"use strict";b.ChartOptionsView=Backbone.View.extend({template:'<div class="col-md-12" id="chart-with-controls"><div class="col-md-7"><ul class="nav nav-tabs" role="tablist" id="myTab"><li role="presentation" class="active"><a href="#chart-tab" aria-controls="home" role="tab" data-toggle="tab">Chart</a></li><li role="presentation"><a href="#dataset-tab" aria-controls="settings" role="tab" data-toggle="tab">Dataset</a></li></ul><div class="tab-content"><div role="tabpanel" class="tab-pane active" id="chart-tab"><div  id="chart-viewport"></div><div class="form-group"><label>Source</label><div>{{source.url}}</div></div><div class="form-group"><label>X Field</label><div>{{xfield}}</div></div><div class="form-group"><label>Series fields</label><div>{{seriesFields}}</div></div><div class="form-group"><label>Graph Type</label><div>{{graphType}}</div></div></div><div role="tabpanel" class="tab-pane" id="dataset-tab"><div id="pager"></div><div id="grid"></div></div></div></div><div class="col-md-5" id="controls"><div id="base-controls"></div><div id="extended-controls"></div></div></div><div class="col-md-12" id="controls"><div id="prev" class="btn btn-default pull-left">Back</div><button type="submit" class="form-submit btn btn-success pull-right">Finish</button></div>',initialize:function(a){var b=this;b.options=_.defaults(a||{},b.options),b.state=b.options.state,b.stepInfo={title:"Preview and Adjust",name:"chartOptions"}},render:function(){console.log("ChartOptionsView::render");var b=this,c=b.state.get("graphType");b.$el.html(Mustache.render(b.template,b.state.toJSON())),b.baseControls=new recline.View.nvd3.BaseControl({model:b.state.get("model"),state:b.state,parent:b}),b.extendedControls=new recline.View.nvd3[c+"Controls"]({model:b.state.get("model"),state:b.state}),b.graph=new recline.View.nvd3[c]({model:b.state.get("model"),state:b.state}),b.grid=new recline.View.SlickGrid({model:b.state.get("model"),el:a("#grid"),options:{}}),b.grid.visible=!0,b.assign(b.graph,"#chart-viewport"),b.assign(b.baseControls,"#base-controls"),b.assign(b.extendedControls,"#extended-controls"),b.assign(b.grid,"#grid"),a("#grid").closest(".tab-content").prev().find('a[data-toggle="tab"]').on("shown.bs.tab",function(){b.grid.grid.resizeCanvas()}),b.$(".chosen-select").chosen({width:"95%"})},updateState:function(a,b){b(a)},assign:function(a,b){var c=this;a.setElement(c.$(b)).render()}})}(jQuery,window),function(a,b){"use strict";b.ChooseChartView=Backbone.View.extend({template:'<div class="form-group"><div class="form-group"><label>Source</label><div>{{source.url}}</div></div><div class="form-group"><label>X Field</label><div>{{xfield}}</div></div><div class="form-group"><label>Series fields</label><div>{{seriesFields}}</div></div><ul id="chart-selector">{{#graphTypes}}<li class="{{value}} {{#selected}}selected{{/selected}}" data-selected="{{value}}"></li>{{/graphTypes}}</ul></div><div id="controls"><div id="prev" class="btn btn-default pull-left">Back</div><div id="next" class="btn btn-primary pull-right">Next</div></div>',initialize:function(a){var b=this;b.options=_.defaults(a||{},b.options),b.state=b.options.state,b.stepInfo={title:"Choose Chart",name:"chooseChart"}},events:{"click #chart-selector li":"selectChart"},selectChart:function(a){var b=this;b.$("li").removeClass("selected"),b.$(a.target).addClass("selected")},getSelected:function(){var a=this;return a.$("li.selected").data("selected")},render:function(){var a=this,b=["discreteBarChart","multiBarChart","stackedAreaChart","pieChart","lineChart","lineWithFocusChart","scatterChart","linePlusBarChart"];a.state.set("graphTypes",_.applyOption(_.arrayToOptions(b),[a.state.get("graphType")||"discreteBarChart"])),a.$el.html(Mustache.render(a.template,a.state.toJSON())),a.$(".chosen-select").chosen({width:"95%"})},updateState:function(a,b){var c=this,d=c.getSelected();a.set("graphType",d),b(a)}})}(jQuery,window),function(a,b){"use strict";b.DataOptionsView=Backbone.View.extend({template:'<div class="form-group"><div class="form-group"><label>Source</label><div>{{source.url}}</div></div><label for="control-chart-series">Series</label><select id="control-chart-series" multiple class="form-control chosen-select">{{#fields}}<option value="{{value}}" {{#selected}} selected{{/selected}}>{{name}}</option>{{/fields}}</select></div><div class="form-group"><label for="control-chart-xfield">X-Field</label><select id="control-chart-xfield" class="form-control chosen-select">{{#xfields}}<option value="{{value}}" {{#selected}} selected{{/selected}}>{{name}}</option>{{/xfields}}</select></div><div class="form-group relative">{{#xDataTypes}}<label class="radio-inline"><input type="radio" name="control-chart-x-data-type" id="control-chart-x-data-type-{{value}}" value="{{value}}" {{#selected}}checked {{/selected}}> {{name}}</label>{{/xDataTypes}}</div><div id="controls"><div id="prev" class="btn btn-default pull-left">Back</div><div id="next" class="btn btn-primary pull-right">Next</div></div></div>',initialize:function(a){var b=this;b.options=_.defaults(a||{},b.options),b.state=b.options.state,b.stepInfo={title:"Define Variables",name:"dataOptions"}},render:function(){var a=this,b=["Number","String","Date","Auto"];a.state.set("fields",_.applyOption(_.arrayToOptions(_.getFields(a.state.get("model"))),a.state.get("seriesFields"))),a.state.set("xfields",_.applyOption(_.arrayToOptions(_.getFields(a.state.get("model"))),[a.state.get("xfield")])),a.state.set("xDataTypes",_.applyOption(_.arrayToOptions(b),[a.state.get("xDataType")||"Auto"])),a.$el.html(Mustache.render(a.template,a.state.toJSON())),a.$(".chosen-select").chosen({width:"95%"})},updateState:function(a,b){var c=this;a.set("seriesFields",c.$("#control-chart-series").val()),a.set("xfield",c.$("#control-chart-xfield").val()),a.set("xDataType",c.$("input[name=control-chart-x-data-type]:checked").val()),b(a)}})}(jQuery,window),function(a,b){"use strict";b.LoadDataView=Backbone.View.extend({template:'<div class="form-group"><label for="control-chart-source">Source</label><input value="{{source.url}}" type="text" id="control-chart-source" class="form-control" /></div><div class="form-group"><select id="control-chart-backend" class="form-control"><option value="csv">CSV</option><option value="gdocs">Google Spreadsheet</option><option value="ckan">DataProxy</option></select></div><div id="controls"><div id="next" class="btn btn-primary pull-right">Next</div></div>',initialize:function(a){var b=this;b.options=_.defaults(a||{},b.options),b.state=b.options.state,b.model=b.options.model,b.stepInfo={title:"Load Data",name:"loadData"}},render:function(){var a=this;a.$el.html(Mustache.render(a.template,a.state.toJSON()))},updateState:function(a,b){var c=this,d=c.$("#control-chart-source").val(),e=c.$("#control-chart-backend").val(),f={backend:e,url:d};a.set("model",new recline.Model.Dataset(f)),a.set("source",f),a.get("model").fetch().done(function(){b(a)})}})}(jQuery,window),function(a,b){"use strict";b.MultiStageView=Backbone.View.extend({template:'<h3>{{title}}</h3><input type="hidden" value="{{state}}"/><div id="step"></div>',events:{"click #next":"nextStep","click #prev":"prevStep"},initialize:function(a){var b=this;b.options=_.defaults(a||{},b.options),b.state=b.options.state,b.currentView=null,b.currentStep=b.state.get("step")||0,b.steps=[],b.state.set("step",b.currentStep)},render:function(){var a=this;return a.currentView=a.getStep(a.currentStep),_.extend(a.currentView.stepInfo,{state:JSON.stringify(a.state.toJSON())}),a.$el.html(Mustache.render(a.template,a.currentView.stepInfo)),a.assign(a.currentView,"#step"),a},assign:function(a,b){var c=this;a.setElement(c.$(b)).render()},addStep:function(a){var b=this;b.steps.push(a)},getStep:function(a){var b=this;return b.steps[a]},nextStep:function(){var a=this,b=a.updateStep(a.getNext(a.steps,a.currentStep));a.currentView.updateState(a.state,b)},prevStep:function(){var a=this,b=a.updateStep(a.getPrev(a.steps,a.currentStep));a.currentView.updateState(a.state,b)},getNext:function(a,b){var c=a.length-1;return c===b?b:++b},getPrev:function(a,b){return b?--b:b},updateStep:function(a){var b=this;return function(c){b.state=c,b.gotoStep(a),b.trigger("multistep:change",{step:a})}},gotoStep:function(a){var b=this;b.currentStep=a,b.state.set("step",b.currentStep),b.render()}})}(jQuery,window),function(a,b){"use strict";b.PublishView=Backbone.View.extend({template:'<div class="col-md-12" id="chart-with-controls"><div class="col-md-7"><div  id="chart-viewport"></div></div><div class="col-md-5" id="controls"><div id="embed-control"></div></div></div><div class="col-md-12" id="controls"><div id="prev" class="btn btn-default pull-left">Back</div><div id="next" class="btn btn-success pull-right">Publish</div></div>',initialize:function(a){var b=this;b.options=_.defaults(a||{},b.options),b.state=b.options.state,b.stepInfo={title:"Publish and Share",name:"publish"}},render:function(){console.log("ChartOptionsView::render");var a=this,b=a.state.get("graphType");a.$el.html(Mustache.render(a.template,a.state.toJSON())),a.embedControl=new recline.View.nvd3.EmbedControl({model:a.state.get("model"),state:a.state,parent:a}),a.graph=new recline.View.nvd3[b]({model:a.state.get("model"),state:a.state}),a.assign(a.graph,"#chart-viewport"),a.assign(a.embedControl,"#embed-control"),a.$(".chosen-select").chosen({width:"95%"})},updateState:function(a,b){b(a)},assign:function(a,b){var c=this;a.setElement(c.$(b)).render()}})}(jQuery,window),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){"use strict";b.BaseControl=Backbone.View.extend({template:'<div id="control-chart-container"><div class="form-group"><label for="control-chart-x-format">X-Format</label><input value="{{xFormat}}" type="text" id="control-chart-x-format" class="form-control" placeholder="e.g: %Y"/></div><div class="form-group"><label for="control-chart-label-x-rotation">Label X Rotation</label><input value="{{options.xAxis.rotateLabels}}" type="text" id="control-chart-label-x-rotation" class="form-control" placeholder="e.g: -45"/></div><div class="form-group"><label for="control-chart-transition-time">Transition Time (milliseconds)</label><input value="{{transitionTime}}" type="text" id="control-chart-transition-time" class="form-control" placeholder="e.g: 2000"/></div><div class="form-group"><label for="control-chart-color">Color</label><input class="form-control" type="text" id="control-chart-color" value="{{options.color}}" placeholder="e.g: #FF0000,green,blue,#00FF00"/></div><div class="form-group"><label for="control-chart-x-axis-label">X Axis Label</label><input class="form-control" type="text" id="control-chart-x-axis-label" value="{{options.xAxis.axisLabel}}"/></div><div class="form-group"><label for="control-chart-x-axis-label">Y Axis Label</label><input class="form-control" type="text" id="control-chart-y-axis-label" value="{{options.yAxis.axisLabel}}"/></div><div class="form-group"><label for="control-chart-sort">Sort</label><select id="control-chart-sort" class="form-control chosen-select">{{#sortFields}}<option value="{{value}}" {{#selected}} selected{{/selected}}>{{name}}</option>{{/sortFields}}</select></div><div class="form-group"><div class="row"><div class="col-md-12 col-sm-12"><label for="exampleInputPassword1">Margin</label></div></div><div class="row"><div class="col-md-3 col-sm-3"><input id="control-chart-margin-top" type="text" class="form-control" aria-label="" placeholder="Top" value="15"></div><div class="col-md-3 col-sm-3"><input id="control-chart-margin-right" type="text" class="form-control" aria-label="" placeholder="Right" value="10"></div><div class="col-md-3 col-sm-3"><input id="control-chart-margin-bottom" type="text" class="form-control" aria-label="" placeholder="Bottom" value="50"></div><div class="col-md-3 col-sm-3"><input id="control-chart-margin-left" type="text" class="form-control" aria-label="" placeholder="Left" value="60"></div></div></div><div class="form-group checkbox"><label for="control-chart-group"><input type="checkbox" id="control-chart-group" value="{{group}}" {{#group}}checked{{/group}}/> Group by X-Field</label></div><div class="form-group checkbox"><label for="control-chart-show-tooltips"><input type="checkbox" id="control-chart-show-tooltips" {{#options.tooltips}}checked{{/options.tooltips}}/> Show Tooltips</label></div><div class="form-group checkbox"><label for="control-chart-reduce-ticks"><input type="checkbox" id="control-chart-reduce-ticks" {{#options.reduceXTicks}}checked{{/options.reduceXTicks}}/> Reduce Ticks</label></div></div>',initialize:function(a){var b=this;b.state=a.state,b.model=a.model,b.parent=a.parent},events:{'change input[type="checkbox"]':"update","change select":"update",'blur input[type="text"]':"update",'keydown input[type="text"]':"update","submit #control-chart":"update"},render:function(){var a=this,b=_.arrayToOptions(_.getFields(a.state.get("model")));b.unshift({name:"default",label:"Default",selected:!1}),a.state.set("sortFields",_.applyOption(b,[a.state.get("sort")])),a.$el.html(Mustache.render(a.template,a.state.toJSON())),a.$(".chosen-select").chosen({width:"95%"})},update:function(a){var b=this;if(!b.$(a.target).closest(".chosen-container").length){var c={};("keydown"!==a.type||13===a.keyCode)&&(c=_.merge({},b.state.toJSON(),b.getUIState(),function(a,b){return _.isArray(a)?b:void 0}),b.state.set(c))}},getUIState:function(){var a,b=this,c={group:b.$("#control-chart-group").is(":checked"),transitionTime:b.$("#control-chart-transition-time").val(),xFormat:b.$("#control-chart-x-format").val(),sort:b.$("#control-chart-sort").val()};c.options=c.options||{},c.options.xAxis=c.options.xAxis||{},c.options.yAxis=c.options.yAxis||{},c.options.tooltips=b.$("#control-chart-show-tooltips").is(":checked"),c.options.reduceXTicks=b.$("#control-chart-reduce-ticks").is(":checked"),c.options.xAxis.rotateLabels=b.$("#control-chart-label-x-rotation").val(),a=_.invoke(b.$("#control-chart-color").val().split(","),"trim"),c.options.xAxis.axisLabel=b.$("#control-chart-x-axis-label").val(),c.options.yAxis.axisLabel=b.$("#control-chart-y-axis-label").val(),b.$("#control-chart-color").val()?c.options.color=a:c.options.color&&delete c.options.color;var d={top:parseInt(b.$("#control-chart-margin-top").val()),right:parseInt(b.$("#control-chart-margin-right").val()),bottom:parseInt(b.$("#control-chart-margin-bottom").val()),left:parseInt(b.$("#control-chart-margin-left").val())};return c.options.margin=d,c}})}(jQuery,recline.View.nvd3),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){"use strict";b.EmbedControl=recline.View.nvd3.BaseControl.extend({template:'<div class="form-group"><label for="control-chart-width">Width</label><input value="{{width}}" type="text" id="control-chart-width" class="form-control" /></div><div class="form-group"><label for="control-chart-height">Height</label><input value="{{height}}" type="text" id="control-chart-height" class="form-control" /></div><div class="form-group"><input type="hidden" value="{{serialized}}" class="form-control"/></div><div class="form-group"><label for="control-chart-embed">Embed Code</label><input value="{{embedCode}}" class="form-control"/></div><div class="form-group"><label for="control-chart-embed">Url</label><input value="{{url}}" class="form-control"/></div>',embedTmpl:'<iframe src="{{{source}}}" width="{{width}}" height="{{height}}" frameBorder="0" style="overflow:hidden" scrolling="no"></iframe>',events:{'change input[type="checkbox"]':"update",'blur input[type="text"]':"update",'keydown input[type="text"]':"update"},update:function(a){var b=this,c={};("keydown"!==a.type||13===parseInt(a.keyCode))&&(c=_.merge({},b.state.toJSON(),b.getUIState()),b.state.set(c,{silent:!0}))},getUIState:function(){var a=this,b={width:a.$("#control-chart-width").val(),height:a.$("#control-chart-height").val()};return b}})}(jQuery,recline.View.nvd3);